递归：时间复杂度要累加；空间复杂度：取最大空间，重复利用
1.时间复杂度：程序运行的快慢（时间上的效率）。
注：如果一段代码中，存在一些基本操作，如果这些基本操作重复次数越多，就可以认为代码执行越慢。
2.空间复杂度：程序运行时占用的内存/外存空间是多少。
3.（1）数组顺序查找时间复杂度为O(N)---N表示元素个数，O(N)表示基本操作大概执行多少次(N次)
  （2）冒泡排序的时间复杂度是O(N^2)
4.二分查找的时间复杂度是O(logN)---N为数组元素的个数
5.递归斐波那契的时间复杂度是：O(2^N)---N为层数；空间复杂度是：O(N)
6.空间复杂度：主要是考虑临时空间是多少。
 （1）空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度。
 （2）常数个额外空间，所以空间复杂度为 O(1)
 （3）动态开辟了N个空间，空间复杂度为 O(N)
 （4）递归求阶乘：递归调用了N次，开辟了N个栈帧，每个栈帧使用了常数个空间。空间复杂度为O(N)