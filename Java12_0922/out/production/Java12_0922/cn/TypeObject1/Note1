1.面向对象最重要的三大特性：封装、继承、多态（重点）
2.面向对象其他特性：抽象、组合、反射、
3.封装：
  封装的本质就是让类的调用者不必太多的了解类的实现者是如何实现类的, 只要知道如何使用类就行了.
4.private实现封装：
  （1）被public修饰的属性方法, 即能在类中使用，也能在类外使用；可以直接被类的调用者使用.
  （2）被private修饰的成员变量或者成员方法, 通常情况下：只能在类内部使用，不能在类外部使用；不能被类的调用者使用.
  （3）当把属性加上private关键字修饰时，此时在类外部无法直接使用，但是可以在类的外部调用类的public方法，
      然后让public方法内部(this.属性)来使用这个private变量
  （4）1.private不光能修饰字段, 也能修饰方法；
      2.通常情况下我们会把字段设为private属性, 但是方法是否需要设为 public, 就需要视具体情形而定.
      一般我们希望一个类只提供 "必要的" public 方法, 而不应该是把所有的方法都无脑设为 public.
  （5）当private修饰的属性提供了get和set方法，就相当于public。要求所有属性都设为private，但是不一定所有的属性都设get和set方法。
5.构造方法：Java中默认的构造方法是无参构造方法。
 （1）构造方法支持重载，一个类可能存在多个构造方法。多个构造方法之间可以互相调用。
 （2）this关键字可以去调用构造方法；this.(构造方法的参数);
 （3）构造方法如果是private，则这个类通过常规方法无法创建出对象。
 （4）单例模式=>设计模式
6.toString方法：
（1）toString默认的行为是得到这个类的类型和身份，但是可以手动修改toString行为，按照需要的情况返回出合适的字符串。
（2）将对象转成字符串这样的操作我们称为序列化.
（3）toString 是Object类提供的方法, 我们自己创建的Person类默认继承自Object类,
    可以重写toString方法实现我们自己版本的转换字符串方法. (关于继承和重写这样的概念, 我们后面会重点介绍).
（4）@Override 在 Java 中称为 "注解", 此处的 @Override 表示下面实现的 toString 方法是重写了父类的方法. 关于
    注解后面的课程会详细介绍.
7.匿名对象：
 （1）匿名只是表示没有名字的对象.
 （2）没有引用的对象称为匿名对象.
 （3）匿名对象只能在创建对象时使用.
 （4）如果一个对象只是用一次, 后面不需要用了, 可以考虑使用匿名对象.
